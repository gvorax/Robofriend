{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/Searchbox.js","components/Scroll.js","components/ErrorBoundle.js","container/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","alt","src","CardList","robots","map","user","i","Searchbox","searchField","SearchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundle","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfields","target","value","fetch","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,0CCOCQ,EAZF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,GACtB,OACI,sBAAKC,UAAU,kDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,8BACrB,gCACI,6BAAKF,IACL,4BAAIC,WCcLK,EAnBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,OACI,8BACIA,EAAOC,KAAI,SAACC,EAAKC,GACb,OACI,cAAC,EAAD,CAEIR,GAAIK,EAAOG,GAAGR,GACdF,KAAQO,EAAOG,GAAGV,KAClBC,MAAOM,EAAOG,GAAGT,OAHZS,SCOdC,EAdG,SAAC,GAA+B,EAA9BC,YAA+B,IAAnBC,EAAkB,EAAlBA,aAC5B,OACI,qBAAKV,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCXI,G,MARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,SAAS,SAAUC,OAAO,kBAAkBC,OAAO,SAAhE,SACKJ,EAAMK,aCkBJC,E,kDApBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAM,CACPC,UAAS,GAHC,E,8DAMAC,EAAMC,GACpBC,KAAKC,SAAS,CAACJ,UAAS,M,+BAIxB,OAAGG,KAAKJ,MAAMC,SAEH,yDAGJG,KAAKX,MAAMK,a,GAjBCQ,aCgDZC,E,kDAzCX,aAAe,IAAD,8BACV,gBAaJC,eAAe,SAACC,GACZ,EAAKJ,SAAS,CAAEK,aAAcD,EAAME,OAAOC,SAb3C,EAAKZ,MAAM,CACP,OAAS,GACT,aAAe,IAJT,E,gEAOM,IAAD,OACfa,MAAM,8CACL7C,MAAK,SAAA8C,GAAQ,OAAIA,EAASC,UAC1B/C,MAAK,SAAAgD,GAAK,OAAG,EAAKX,SAAS,CAACvB,OAAOkC,S,+BAO/B,IAAD,EACyBZ,KAAKJ,MAA3BlB,EADH,EACGA,OAAO4B,EADV,EACUA,aACRO,EAAgBnC,EAAOoC,QAAO,SAAAC,GAChC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASX,EAAaU,kBAE1D,OAAQtC,EAAOwC,OAGP,sBAAK5C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU1B,OAAQmC,WAPrC,oBAAIvC,UAAU,KAAd,yB,GAzBS4B,aCDlBiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B9D,M","file":"static/js/main.e2ff98e5.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Card = ({name,email,id}) => {\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma3 grow shadow-5'>\r\n            <img alt=\"robots\" src={`https://robohash.org/${id}?size=180x180&&set=set4 `}/>\r\n            <div> \r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card  from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n    return(\r\n        <div>{\r\n            robots.map((user,i) =>{\r\n                return(\r\n                    <Card \r\n                        key={i} \r\n                        id={robots[i].id}\r\n                        name = {robots[i].name} \r\n                        email={robots[i].email}\r\n                    />\r\n                )\r\n            })\r\n            }\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from \"react\";\r\n\r\nconst Searchbox = ({searchField,SearchChange}) => {\r\n    return(\r\n        <div className=\"pa2\">\r\n            <input \r\n                className=\"pa3 ba b--green bg-lightest-blue\"\r\n                type=\"search\"\r\n                placeholder=\"Search robots\"\r\n                onChange={SearchChange}\r\n             />\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Searchbox;","import React from 'react';\r\n\r\nconst Scroll = (props)=>{\r\n    return (\r\n        <div style={{overflow:'scroll', border:'5px solid black',height:'800px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React,{Component} from 'react';\r\n\r\nclass ErrorBoundle extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            hasError:false\r\n        }\r\n    }\r\n    componentDidCatch(error,info){\r\n        this.setState({hasError:true})\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError)\r\n        {\r\n            return <h1>Oooops.That is not good</h1>\r\n        }\r\n    \r\n        return this.props.children;\r\n    }\r\n\r\n}\r\nexport default ErrorBoundle;","import React, { Component }from 'react'\r\n// import {robots} from '../robots.js';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/Searchbox';\r\nimport '../container/App.css';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundle from '../components/ErrorBoundle';\r\nclass App extends Component {\r\n  \r\n    constructor() {\r\n        super()\r\n        this.state={\r\n            'robots':[],\r\n            'searchfields':''\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users =>this.setState({robots:users}))\r\n        \r\n    }\r\n\r\n    onSearchChange=(event)=>{\r\n        this.setState({ searchfields: event.target.value});\r\n    }\r\n    render(){\r\n        const {robots,searchfields} =this.state;\r\n        const filteredRobots =robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(searchfields.toLowerCase())\r\n        });\r\n        return !robots.length ?\r\n         <h1 className=\"tc\">Loading</h1>:\r\n          (\r\n                <div className=\"tc\">\r\n                    <h1 className=\"f1\">Robofriends</h1>\r\n                    <SearchBox SearchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundle>\r\n                            <CardList robots={filteredRobots} />\r\n                        </ErrorBoundle>\r\n                    </Scroll> \r\n                    \r\n                </div>  \r\n            )\r\n        \r\n        \r\n    }\r\n    \r\n}\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport 'tachyons';\nimport App from './container/App';\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}